---
import '@/styles/globals.css';

import LanguagePicker from '@/components/LanguagePicker.astro';
import { getLangFromUrl, useTranslations } from '@/i18n/utils';
import { ModeToggle } from '@/components/ModeToggle';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const theme = Astro.cookies.get('zn-theme')?.value || 'light';
---

<html lang={lang} class={theme}>
  <head>
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='viewport' content='width=device-width' />
    <title>{t('hero.title')}</title>
  </head>
  <body class='min-h-screen flex flex-col'>
    <div class='flex-1'>
      <slot />
    </div>
    <footer class='flex gap-8 md:gap-16 p-2 items-center justify-center'>
      <LanguagePicker />
      <ModeToggle lang={lang} client:load />
    </footer>
  </body>
</html>

<!-- Detect and keep track of theme from cookies -->
<script is:inline>
  const getThemePreference = () => {
    const theme = document.cookie
      .split('; ')
      .find((row) => row.startsWith('zn-theme'))
      ?.split('=')[1];

    if (theme) {
      return theme;
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light';
  };

  const isDark = getThemePreference() === 'dark';

  document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

  const observer = new MutationObserver(() => {
    const isDark = document.documentElement.classList.contains('dark');
    const newTheme = isDark ? 'dark' : 'light';
    setCookie('zn-theme', newTheme);
  });

  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['class'],
  });

  function setCookie(name, value) {
    let expires = '';
    const date = new Date();
    date.setTime(date.getTime() + 400 * 24 * 60 * 60 * 1000);
    expires = '; expires=' + date.toUTCString();
    document.cookie = name + '=' + value + expires + '; path=/';
  }
</script>
